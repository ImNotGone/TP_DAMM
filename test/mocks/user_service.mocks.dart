// Mocks generated by Mockito 5.4.4 from annotations
// in ser_manos_mobile/test/mocks/user_service.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:io' as _i6;

import 'package:firebase_auth/firebase_auth.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:ser_manos_mobile/auth/application/user_service.dart' as _i3;
import 'package:ser_manos_mobile/auth/domain/app_user.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAppUser_0 extends _i1.SmartFake implements _i2.AppUser {
  _FakeAppUser_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i3.UserService {
  MockUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i5.User?> signIn(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<_i5.User?>.value(),
      ) as _i4.Future<_i5.User?>);

  @override
  _i4.Future<void> signUp(
    String? firstName,
    String? lastName,
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [
            firstName,
            lastName,
            email,
            password,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  bool isLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isLoggedIn,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<_i2.AppUser?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i4.Future<_i2.AppUser?>.value(),
      ) as _i4.Future<_i2.AppUser?>);

  @override
  _i4.Future<_i2.AppUser> updateUser(_i2.AppUser? user) => (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [user],
        ),
        returnValue: _i4.Future<_i2.AppUser>.value(_FakeAppUser_0(
          this,
          Invocation.method(
            #updateUser,
            [user],
          ),
        )),
      ) as _i4.Future<_i2.AppUser>);

  @override
  _i4.Future<String?> uploadProfilePicture(_i6.File? imageFile) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadProfilePicture,
          [imageFile],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<_i2.AppUser> markVolunteeringAsFavourite(String? volunteeringId) =>
      (super.noSuchMethod(
        Invocation.method(
          #markVolunteeringAsFavourite,
          [volunteeringId],
        ),
        returnValue: _i4.Future<_i2.AppUser>.value(_FakeAppUser_0(
          this,
          Invocation.method(
            #markVolunteeringAsFavourite,
            [volunteeringId],
          ),
        )),
      ) as _i4.Future<_i2.AppUser>);

  @override
  _i4.Future<_i2.AppUser> unmarkVolunteeringAsFavourite(
          String? volunteeringId) =>
      (super.noSuchMethod(
        Invocation.method(
          #unmarkVolunteeringAsFavourite,
          [volunteeringId],
        ),
        returnValue: _i4.Future<_i2.AppUser>.value(_FakeAppUser_0(
          this,
          Invocation.method(
            #unmarkVolunteeringAsFavourite,
            [volunteeringId],
          ),
        )),
      ) as _i4.Future<_i2.AppUser>);

  @override
  _i4.Future<_i2.AppUser> applyToVolunteering(String? volunteeringId) =>
      (super.noSuchMethod(
        Invocation.method(
          #applyToVolunteering,
          [volunteeringId],
        ),
        returnValue: _i4.Future<_i2.AppUser>.value(_FakeAppUser_0(
          this,
          Invocation.method(
            #applyToVolunteering,
            [volunteeringId],
          ),
        )),
      ) as _i4.Future<_i2.AppUser>);

  @override
  _i4.Future<_i2.AppUser> unapplyToVolunteering() => (super.noSuchMethod(
        Invocation.method(
          #unapplyToVolunteering,
          [],
        ),
        returnValue: _i4.Future<_i2.AppUser>.value(_FakeAppUser_0(
          this,
          Invocation.method(
            #unapplyToVolunteering,
            [],
          ),
        )),
      ) as _i4.Future<_i2.AppUser>);
}
